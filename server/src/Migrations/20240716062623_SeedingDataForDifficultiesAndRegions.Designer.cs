// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using dotnet_course.Data;

#nullable disable

namespace dotnet_course.Migrations
{
    [DbContext(typeof(NZWalksDbContext))]
    [Migration("20240716062623_SeedingDataForDifficultiesAndRegions")]
    partial class SeedingDataForDifficultiesAndRegions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("dotnet_course.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e8e6a84-f821-4073-9c81-7a7d5f6fa60e"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("afd8b73e-1fb1-4c69-bcd1-9254ddf7729c"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("dd483d1c-c5aa-4a5f-b8cc-dc14fdd7c6b0"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("dotnet_course.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8768a13-498f-472e-96cb-22a01d1eb4a1"),
                            Code = "NL",
                            Name = "Northland",
                            RegionImageUrl = "https://www.doc.govt.nz/globalassets/images/conservation/parks-and-recreation/places-to-visit/northland/tauranga-bay.jpg"
                        },
                        new
                        {
                            Id = new Guid("3682f395-e1a3-4fc9-abd1-b4ee65b1eaa5"),
                            Code = "AK",
                            Name = "Auckland",
                            RegionImageUrl = "https://www.doc.govt.nz/globalassets/images/conservation/parks-and-recreation/places-to-visit/auckland/auckland.jpg"
                        },
                        new
                        {
                            Id = new Guid("ff1d8360-2245-4d6b-ae46-8fa42837713e"),
                            Code = "WK",
                            Name = "Waikato",
                            RegionImageUrl = "https://www.doc.govt.nz/globalassets/images/conservation/parks-and-recreation/places-to-visit/waikato/hamilton.jpg"
                        },
                        new
                        {
                            Id = new Guid("2ba8de48-1200-478a-b477-cd3085d265cb"),
                            Code = "BP",
                            Name = "Bay of Plenty",
                            RegionImageUrl = "https://www.doc.govt.nz/globalassets/images/conservation/parks-and-recreation/places-to-visit/bay-of-plenty/mt-maunganui.jpg"
                        },
                        new
                        {
                            Id = new Guid("8f20f419-e26a-42a0-bbd0-126e4139517d"),
                            Code = "GB",
                            Name = "Gisborne"
                        });
                });

            modelBuilder.Entity("dotnet_course.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uuid");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uuid");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("dotnet_course.Models.Domain.Walk", b =>
                {
                    b.HasOne("dotnet_course.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet_course.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
